// Generated by gencpp from file ground_station/Ambient.msg
// DO NOT EDIT!


#ifndef GROUND_STATION_MESSAGE_AMBIENT_H
#define GROUND_STATION_MESSAGE_AMBIENT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace ground_station
{
template <class ContainerAllocator>
struct Ambient_
{
  typedef Ambient_<ContainerAllocator> Type;

  Ambient_()
    : time_recorded(0)
    , bme01_temp(0)
    , bme01_pres(0)
    , bme01_humi(0)
    , bme02_temp(0)
    , bme02_pres(0)
    , bme02_humi(0)
    , dallas01_temp(0)
    , dallas02_temp(0)
    , dallas03_temp(0)
    , dallas04_temp(0)
    , dallas05_temp(0)
    , dallas06_temp(0)
    , dallas07_temp(0)
    , dallas08_temp(0)
    , dallas09_temp(0)
    , dallas10_temp(0)
    , dallas11_temp(0)
    , dallas12_temp(0)
    , dallas13_temp(0)
    , dallas14_temp(0)
    , dallas15_temp(0)
    , dallas16_temp(0)  {
    }
  Ambient_(const ContainerAllocator& _alloc)
    : time_recorded(0)
    , bme01_temp(0)
    , bme01_pres(0)
    , bme01_humi(0)
    , bme02_temp(0)
    , bme02_pres(0)
    , bme02_humi(0)
    , dallas01_temp(0)
    , dallas02_temp(0)
    , dallas03_temp(0)
    , dallas04_temp(0)
    , dallas05_temp(0)
    , dallas06_temp(0)
    , dallas07_temp(0)
    , dallas08_temp(0)
    , dallas09_temp(0)
    , dallas10_temp(0)
    , dallas11_temp(0)
    , dallas12_temp(0)
    , dallas13_temp(0)
    , dallas14_temp(0)
    , dallas15_temp(0)
    , dallas16_temp(0)  {
  (void)_alloc;
    }



   typedef uint32_t _time_recorded_type;
  _time_recorded_type time_recorded;

   typedef int16_t _bme01_temp_type;
  _bme01_temp_type bme01_temp;

   typedef int16_t _bme01_pres_type;
  _bme01_pres_type bme01_pres;

   typedef uint8_t _bme01_humi_type;
  _bme01_humi_type bme01_humi;

   typedef int16_t _bme02_temp_type;
  _bme02_temp_type bme02_temp;

   typedef int16_t _bme02_pres_type;
  _bme02_pres_type bme02_pres;

   typedef uint8_t _bme02_humi_type;
  _bme02_humi_type bme02_humi;

   typedef int16_t _dallas01_temp_type;
  _dallas01_temp_type dallas01_temp;

   typedef int16_t _dallas02_temp_type;
  _dallas02_temp_type dallas02_temp;

   typedef int16_t _dallas03_temp_type;
  _dallas03_temp_type dallas03_temp;

   typedef int16_t _dallas04_temp_type;
  _dallas04_temp_type dallas04_temp;

   typedef int16_t _dallas05_temp_type;
  _dallas05_temp_type dallas05_temp;

   typedef int16_t _dallas06_temp_type;
  _dallas06_temp_type dallas06_temp;

   typedef int16_t _dallas07_temp_type;
  _dallas07_temp_type dallas07_temp;

   typedef int16_t _dallas08_temp_type;
  _dallas08_temp_type dallas08_temp;

   typedef int16_t _dallas09_temp_type;
  _dallas09_temp_type dallas09_temp;

   typedef int16_t _dallas10_temp_type;
  _dallas10_temp_type dallas10_temp;

   typedef int16_t _dallas11_temp_type;
  _dallas11_temp_type dallas11_temp;

   typedef int16_t _dallas12_temp_type;
  _dallas12_temp_type dallas12_temp;

   typedef int16_t _dallas13_temp_type;
  _dallas13_temp_type dallas13_temp;

   typedef int16_t _dallas14_temp_type;
  _dallas14_temp_type dallas14_temp;

   typedef int16_t _dallas15_temp_type;
  _dallas15_temp_type dallas15_temp;

   typedef int16_t _dallas16_temp_type;
  _dallas16_temp_type dallas16_temp;





  typedef boost::shared_ptr< ::ground_station::Ambient_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ground_station::Ambient_<ContainerAllocator> const> ConstPtr;

}; // struct Ambient_

typedef ::ground_station::Ambient_<std::allocator<void> > Ambient;

typedef boost::shared_ptr< ::ground_station::Ambient > AmbientPtr;
typedef boost::shared_ptr< ::ground_station::Ambient const> AmbientConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::ground_station::Ambient_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::ground_station::Ambient_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace ground_station

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'ground_station': ['/home/korisd/tUR/ROSCode/RAM/src/ground_station/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::ground_station::Ambient_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::ground_station::Ambient_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ground_station::Ambient_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ground_station::Ambient_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ground_station::Ambient_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ground_station::Ambient_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::ground_station::Ambient_<ContainerAllocator> >
{
  static const char* value()
  {
    return "b55e32e8e705eea0bff919abecddcaf3";
  }

  static const char* value(const ::ground_station::Ambient_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xb55e32e8e705eea0ULL;
  static const uint64_t static_value2 = 0xbff919abecddcaf3ULL;
};

template<class ContainerAllocator>
struct DataType< ::ground_station::Ambient_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ground_station/Ambient";
  }

  static const char* value(const ::ground_station::Ambient_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::ground_station::Ambient_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint32 time_recorded\n\
\n\
int16 bme01_temp\n\
int16 bme01_pres\n\
uint8 bme01_humi\n\
\n\
int16 bme02_temp\n\
int16 bme02_pres\n\
uint8 bme02_humi\n\
\n\
int16 dallas01_temp\n\
int16 dallas02_temp\n\
int16 dallas03_temp\n\
int16 dallas04_temp\n\
int16 dallas05_temp\n\
int16 dallas06_temp\n\
int16 dallas07_temp\n\
int16 dallas08_temp\n\
int16 dallas09_temp\n\
int16 dallas10_temp\n\
int16 dallas11_temp\n\
int16 dallas12_temp\n\
int16 dallas13_temp\n\
int16 dallas14_temp\n\
int16 dallas15_temp\n\
int16 dallas16_temp\n\
";
  }

  static const char* value(const ::ground_station::Ambient_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::ground_station::Ambient_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.time_recorded);
      stream.next(m.bme01_temp);
      stream.next(m.bme01_pres);
      stream.next(m.bme01_humi);
      stream.next(m.bme02_temp);
      stream.next(m.bme02_pres);
      stream.next(m.bme02_humi);
      stream.next(m.dallas01_temp);
      stream.next(m.dallas02_temp);
      stream.next(m.dallas03_temp);
      stream.next(m.dallas04_temp);
      stream.next(m.dallas05_temp);
      stream.next(m.dallas06_temp);
      stream.next(m.dallas07_temp);
      stream.next(m.dallas08_temp);
      stream.next(m.dallas09_temp);
      stream.next(m.dallas10_temp);
      stream.next(m.dallas11_temp);
      stream.next(m.dallas12_temp);
      stream.next(m.dallas13_temp);
      stream.next(m.dallas14_temp);
      stream.next(m.dallas15_temp);
      stream.next(m.dallas16_temp);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Ambient_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::ground_station::Ambient_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::ground_station::Ambient_<ContainerAllocator>& v)
  {
    s << indent << "time_recorded: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.time_recorded);
    s << indent << "bme01_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.bme01_temp);
    s << indent << "bme01_pres: ";
    Printer<int16_t>::stream(s, indent + "  ", v.bme01_pres);
    s << indent << "bme01_humi: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.bme01_humi);
    s << indent << "bme02_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.bme02_temp);
    s << indent << "bme02_pres: ";
    Printer<int16_t>::stream(s, indent + "  ", v.bme02_pres);
    s << indent << "bme02_humi: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.bme02_humi);
    s << indent << "dallas01_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas01_temp);
    s << indent << "dallas02_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas02_temp);
    s << indent << "dallas03_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas03_temp);
    s << indent << "dallas04_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas04_temp);
    s << indent << "dallas05_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas05_temp);
    s << indent << "dallas06_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas06_temp);
    s << indent << "dallas07_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas07_temp);
    s << indent << "dallas08_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas08_temp);
    s << indent << "dallas09_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas09_temp);
    s << indent << "dallas10_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas10_temp);
    s << indent << "dallas11_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas11_temp);
    s << indent << "dallas12_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas12_temp);
    s << indent << "dallas13_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas13_temp);
    s << indent << "dallas14_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas14_temp);
    s << indent << "dallas15_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas15_temp);
    s << indent << "dallas16_temp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.dallas16_temp);
  }
};

} // namespace message_operations
} // namespace ros

#endif // GROUND_STATION_MESSAGE_AMBIENT_H
